"""
Django settings for QwertySite project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#with open('etc/secret_key.txt') as f:
#  SECRET_KEY = f.read().strip()
SECRET_KEY = 'lo%s1q&il2*r!cs_yu7+#3^^hftmc&p0%nh5#(1ck6m7jji3&6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
  
    'reader.apps.ReaderConfig',
    'accounts.apps.AccountsConfig',
    'pages.apps.PagesConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'QwertySite.urls'

TEMPLATES = [{
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [os.path.join(BASE_DIR, 'templates')],
    'APP_DIRS': True,
    'OPTIONS': {
       'context_processors': [
       'django.template.context_processors.debug',
       'django.template.context_processors.request',
       'django.contrib.auth.context_processors.auth',
       'django.contrib.messages.context_processors.messages',
        ],
    },
}]

WSGI_APPLICATION = 'QwertySite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
#dbEngine = ""
#dbName = ""
#dbUser = ""
#dbPassword = ""
#dbHost = ""
#dbPort = ""
#with open('etc/db.txt') as f:
  #dbEngine = f.readline().strip()
  #dbName = f.readline().strip()
  #dbUser = f.readline().strip()
  #dbPassword = f.readline().strip()
  #dbHost = f.readline().strip()
  #dbPort = f.readline().strip()
#DATABASES = {
  #'default': {
      #'ENGINE': dbEngine,
        #'NAME': dbName,
        #'USER': dbUser,
        #'PASSWORD': dbPassword,
        #'HOST': dbHost,
        #'PORT': dbPort,
    #}
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'qwerty-testing',
        'USER': 'testing_all',
        'PASSWORD': 'password',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

#CSRF_COOKIE_SECURE = True
#SESSION_COOKIE_SECURE = True

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'

# Use this for testing
EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
EMAIL_FILE_PATH = '.' # change this to a proper location

#emHost = ""
#emPort = ""
#emHostUser  = ""
#emHostPw = ""
#with open('etc/email.txt') as f:
  #emHost = f.readline().strip()
  #emPort = f.readline().strip()
  #emHostUser = f.readline().strip()
  #emHostPw = f.readline().strip()
#EMAIL_HOST = emHost
#EMAIL_PORT = emPort
#EMAIL_HOST_USER = emHostUser
#EMAIL_HOST_PASSWORD = emHostPw
#EMAIL_USE_SSL = True
